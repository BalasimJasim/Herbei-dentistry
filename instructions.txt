Instructions for Cursor AI to Build Herbie Dental Clinic Website
Project Overview
Use this guide to build a modern dental clinic web app for Herbie Dental Clinic. The app will provide essential features such as online appointment booking, a patient portal, SEO optimization, and a user-friendly interface.

The web app will be built using the MERN Stack:

MongoDB for database storage
Express for the backend framework
React for the frontend
Node.js for the server
You will need to ensure the web app is visually appealing, responsive, and easy to navigate. It should provide a patient portal, allow for appointment scheduling, and ensure SEO optimization.

Please follow the instructions step-by-step to ensure we cover all the necessary functionality.

Frontend and Backend Folder Structure
Current File Structure:
lua
Copy code
HERBIE/
├── backend/
│   ├── node_modules/
│   ├── package-lock.json
│   └── package.json
│
└── frontend/
    ├── node_modules/
    ├── src/
    │   ├── assets/
    │   ├── components/
    │   │   ├── AppointmentCalendar.css
    │   │   ├── AppointmentCalendar.jsx
    │   │   ├── AppointmentForm.css
    │   │   ├── AppointmentForm.jsx
    │   │   ├── Footer.css
    │   │   ├── Footer.jsx
    │   │   ├── LanguageSwitcher.css
    │   │   ├── LanguageSwitcher.jsx
    │   │   ├── MultiStepAppointment.css
    │   │   ├── MultiStepAppointment.jsx
    │   │   ├── Navbar.css
    │   │   ├── Navbar.jsx
    │   │   ├── TeamMember.css
    │   │   └── TeamMember.jsx
    │   ├── contexts/
    │   ├── i18n/
    │   │   └── i18n.js
    │   ├── pages/
    │   │   ├── About.css
    │   │   ├── About.jsx
    │   │   ├── AppointmentConfirmation.css
    │   │   ├── AppointmentConfirmation.jsx
    │   │   ├── Appointments.css
    │   │   ├── Appointments.jsx
    │   │   ├── Contact.css
    │   │   ├── Contact.jsx
    │   │   ├── Home.css
    │   │   ├── Home.jsx
    │   │   ├── PatientPortal.css
    │   │   ├── PatientPortal.jsx
    │   │   ├── Services.css
    │   │   └── Services.jsx
    │   ├── providers/
    │   │   └── LanguageProvider.jsx
    │   ├── styles/
    │   │   ├── layout.css
    │   │   ├── rtl.css
    │   │   └── variables.css
    │   ├── utils/
    │   ├── App.css
    │   ├── App.jsx
    │   ├── index.css
    │   └── main.jsx
    ├── public/
    │   └── locales/
    │       ├── de/
    │       │   └── translation.json
    │       ├── en/
    │       │   └── translation.json
    │       ├── hu/
    │       │   └── translation.json
    │       └── uk/
    │           └── translation.json
    ├── .gitignore
    ├── eslint.config.js
    ├── index.html
    ├── package-lock.json
    ├── package.json
    ├── README.md
    ├── vite.config.js
    └── instructions.txt

Frontend Instructions
1. Homepage:
Hero Section: The hero section should have a full-screen image or video of the clinic with a clear CTA for booking an appointment, e.g., "Book Your Appointment Now."
About the Clinic: Provide a short introduction to Herbie Dental Clinic, highlighting its professionalism and experience.
Highlighted Services: Showcase key services like teeth whitening, orthodontics, etc., with CTA buttons linking to their respective pages.
Testimonials: Display 2-3 testimonials in a carousel to build trust with the visitors.
2. About Us Page:
Team Introduction: Include photos and short bios of the dental staff.
Mission & Values: Showcase the clinic’s core values, highlighting their commitment to patient care.
Clinic Tour: Provide images or a short video of the clinic's interior.
3. Services Page:
Service List: Present each service in a grid with images/icons, a short description, and a link to more details or the appointment page.
4. Appointment Booking:
Calendar Integration: Add a calendar component to allow users to select available time slots.
Form: Users will need to fill out their details (name, phone, email, and selected service) and submit for an appointment. Store this in the database.
Confirmation: Display a confirmation message with booking details after submission.
5. Patient Portal:
Login/Signup: Use JWT authentication for secure login/signup for patients.
Profile Dashboard: Allow patients to view and manage their appointments, medical history, and personal info.
Appointment History: Display a list of past appointments with relevant details.
6. Contact Us Page:
Contact Form: Users can submit inquiries with their name, email, and message.
Map: Integrate Google Maps to show the clinic’s location.
Social Links: Provide links to social media profiles of the clinic.
7. Blog/News (Optional):
Articles Section: Share useful dental tips, news, or promotions.
Search/Filter: Allow users to search for articles or filter by category.
Backend Instructions
1. Setup and Packages:
Install the following necessary packages for backend functionality:
css
Copy code
npm install express mongoose cors dotenv body-parser bcrypt jsonwebtoken nodemailer
2. API Endpoints:
Appointment API:

Endpoint to allow users to create, view, and manage appointments.
Use MongoDB to store appointment data and ensure the system is capable of handling multiple appointments without conflicts.
Patient Authentication:

Set up JWT authentication for user login and registration. The backend should be able to securely store user passwords using bcrypt and provide authentication tokens.
Contact Form:

Use Nodemailer to handle form submissions and send emails to the clinic’s email address.
Database Schema:

Define Mongoose models for appointments and patients.
Store appointment details, patient information, and feedback in the database.
3. Routes:
Authentication Routes: Handle signup and login.
Appointment Routes: Handle CRUD operations for patient appointments.
Contact Form Routes: Handle email submissions from the contact form.
4. Security:
Ensure that all sensitive information is encrypted and that JWT tokens are securely stored and used.
Apply rate limiting and other security best practices to prevent abuse of API endpoints.
SEO and Performance Features:
1. SEO:
Use React Helmet to dynamically set the meta tags for each page.
Ensure that each page has relevant title tags, description tags, and structured data for better search visibility.
2. Mobile-Friendly:
Ensure the design is responsive and optimized for mobile users.
Use media queries to adapt the layout based on screen sizes.
3. Analytics:
Implement Google Analytics to track visitors and appointments on the website.
Set up Google Tag Manager for better control over analytics and marketing tags.